#2. Média de salário por localização para cada ano.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

sal = pd.read_csv('ds_salaries.csv', index_col = 0)

#sal.isna() #Mostra quais celulas estão vazias em um dataset
#sal.isna().any() #Contagem de celulas vazias de um dataset
#sal.describe() #Mostra vários valores estatisticos para o dataset

#Maior quantidade de funcionários
m = sal.groupby(by = 'job_title')['job_title'].count().nlargest(5)#.sort_values(ascending= False)

#Separando os valores que preciso por ano (salario e cargo)
cargos = ['Data Analyst','Data Engineer','Data Scientist','Machine Learning Engineer'] #Cargos com maior quantidade de pessoas

#Identificando os paises com maiores numeros de empresas
loc = sal.groupby(by = 'company_location')['company_location'].count().nlargest(5)

pais = ['US','GB','CA','DE','IN'] #USA, Great Britain, Canada, Germany, India
pais = sorted(pais)

pais_nomes = ['Canada', 'Germany', 'Great Britain', 'India', 'United States']

cargo_antigo = 'Machine Learning Manager'
cargo_novo = 'Machine Learning Engineer' #Novo cargo para a linha de index 29, que era Machine Learning Manager

#Atribuindo o novo cargo. Se não fizer isso, não haverá nenhum trabalhador do Canadá que seja dos cargos selecionados em 2020
sal.loc[29,'job_title'] = cargo_novo


#Criando subset filtrado apenas para as localidades e cargos desejados
s_cp = sal[np.logical_and(sal['job_title'].isin(cargos), sal['company_location'].isin(pais))].loc[:,['work_year','company_location','salary_in_usd']] #Já está filtrado corretamente

l = s_cp.groupby(by = ['work_year','company_location']).agg({'salary_in_usd':np.mean}).reset_index()

l20 = l[l['work_year'] == 2020]
l21 = l[l['work_year'] == 2021]
l22 = l[l['work_year'] == 2022]

#l20 = l.groupby(by = ['work_year','company_location'])['salary_in_usd'].mean()

#Criando o subset de valores para cada localização em cada ano
locCA = l[l['company_location'] == 'CA']
locDE = l[l['company_location'] == 'DE']
locGB = l[l['company_location'] == 'GB']
locIN = l[l['company_location'] == 'IN']
locUS = l[l['company_location'] == 'US']

#Alterando tamanho do gráfico de linha
plt.rcParams["figure.figsize"] = (10, 5)

#Criando as barras
loc1 = locCA.plot(x = 'work_year', y = 'salary_in_usd', color = 'red', label = 'CA', marker = 'o')
loc2 = locDE.plot(x = 'work_year', y = 'salary_in_usd', color = 'orange', label = 'DE', ax = loc1, marker = 'o')
loc3 = locGB.plot(x = 'work_year', y = 'salary_in_usd', color = 'green', label = 'GB', ax = loc2, marker = 'o')
loc4 = locIN.plot(x = 'work_year', y = 'salary_in_usd', color = 'black', label = 'IN', ax = loc3, marker = 'o')
locUS.plot(x = 'work_year', y = 'salary_in_usd', color = 'blue', label = 'US', ax = loc4, marker = 'o')

#Incluindo rótulo de dados
#plt.bar_label(loc1, fmt="%.01f", size=11, label_type="edge")
#plt.bar_label(loc2, fmt="%.01f", size=11, label_type="edge")
#plt.bar_label(loc3, fmt="%.01f", size=11, label_type="edge")

#Criando legendas
plt.title('Média de salário por localização para cada ano', size = 20)
plt.xlabel('Anos', size = 15)
plt.xticks(locCA['work_year'], locCA['work_year']) #Colocando o eixo X com os valores dos anos corretos
plt.xlim(2019.8,2022.4)

plt.ylabel('Média de salário (Dolar)', size = 15)
plt.yticks(size = 10, rotation = 30)

plt.legend(loc = 5, fontsize = 13)
plt.show()
